.root {
  position: fixed;
  inset: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 60; /* above app UI */
  pointer-events: none;
}

.hidden {
  display: none;
}

/* Brand colors */
.root {
  --brand-orange: #FF8601;
  --brand-blue: #010E9B;
}

.container {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) scale(1);
  width: 120px;
  height: 120px;
  transition: transform 1.25s ease-in-out;
}

.overlayWhite {
  position: absolute;
  inset: 0;
  background: white;
  opacity: 0;
  transition: opacity .5s ease;
}

/* States */
.newPage .container {
  transform: translate(-50%, -50%) scale(0);
}
.loaded .overlayWhite {
  opacity: 1;
}

/* SVG base */
.root :global(svg.loader) {
  width: 120px;
  height: 120px;
  overflow: visible;
}

/* Core burst */
.loaded :global(.core) > :global(.path) {
  fill: var(--brand-orange);
  opacity: 1;
  transform-origin: 50% 50%;
}
.loaded :global(.core) > :global(.path) { animation: core-burst 2.5s ease-in-out both; }

@keyframes core-burst {
  0% { opacity: 0; transform: scale(1); }
  25% { opacity: 1; transform: scale(20); }
  85% { opacity: 1; transform: scale(20); }
  100% { opacity: 0; transform: scale(1); }
}

/* Spinner */
.root :global(.spinner) {
  animation: rotate 1.25s linear infinite;
  transform-origin: 50% 50%;
  opacity: 1;
  transition: opacity .2s .1s;
}
.loaded :global(.spinner) { opacity: 0; }

.root :global(.spinner) > :global(.path) {
  stroke: var(--brand-orange);
  stroke-width: 6;
  fill: none;
  --r: 20;
  --c: calc(2 * 3.1416 * var(--r));
  stroke-dasharray: var(--c);
  stroke-dashoffset: var(--c);
  animation: spinner-dash 1.25s ease-in-out infinite both;
}

@keyframes rotate {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(270deg); }
}

@keyframes spinner-dash {
  0%   { stroke-dashoffset: var(--c); transform: rotate(0deg); }
  65%  { stroke-dashoffset: calc(var(--c) / 4); transform: rotate(135deg); }
  100% { stroke-dashoffset: var(--c); transform: rotate(450deg); }
}

/* Concentric layers */
.root :global(.layer) :global(.path) {
  fill: none;
  visibility: hidden;
  transform-origin: 50% 50%;
}
.loaded :global(.layer) :global(.path) { visibility: visible; }

/* Shared animation using CSS variables per layer */
.loaded :global(.layer) :global(.path) {
  /* expects custom props: --c, --angle, --w, --alpha */
  stroke: rgba(1, 14, 155, var(--alpha, 0.5)); /* brand blue with alpha */
  stroke-width: var(--w);
  stroke-dasharray: var(--c);
  stroke-dashoffset: var(--c);
  transform: rotate(calc(var(--angle) * 1deg));
  animation: layer-anim 1.25s ease-in forwards;
}

@keyframes layer-anim {
  0% {
    stroke-dashoffset: var(--c);
  }
  75% {
    stroke-dashoffset: calc(var(--c) / 2);
  }
  100% {
    stroke: var(--brand-blue);
    stroke-width: calc(var(--w) * 3);
    stroke-dasharray: calc(var(--c) + 6.2832);
    stroke-dashoffset: 0;
    transform: rotate(calc((var(--angle) + 480) * 1deg));
  }
}

/* Utility centering for demo text blocks if needed (not used) */
.page, .wrap { display: none; }
